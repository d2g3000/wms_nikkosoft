@model RecepcionReng
@{
    decimal totalRenglon = Model.total_art;
}

<h5>Ubicaciones del renglón nro:<b>@Model.reng_num</b> de la factura de compra nro: <b>@Model.doc_num</b></h5>

<p>
  Articulo: <b>@Model.co_art</b> @Model.articulo.art_des
</p>
<p>
    Cantidad del renglón: <b><span id="total_articulo">@Model.total_art</span></b>
</p>
<p>Cantidad ubicado: <b><span id="cantidad_ubicada"></span></b></p>
<p>Falta por ubicar: <b><span id="falta_ubicar"></span></b></p>
<p>
    <button class="btn btn-light" data-target-modal="#ubicacionArticulo">
        <svg xmlns="http://www.w3.org/2000/svg" height="24px" viewBox="0 -960 960 960" width="24px" fill="#434343"><path d="M200-120q-33 0-56.5-23.5T120-200v-560q0-33 23.5-56.5T200-840h168q13-36 43.5-58t68.5-22q38 0 68.5 22t43.5 58h168q33 0 56.5 23.5T840-760v268q-19-9-39-15.5t-41-9.5v-243H200v560h242q3 22 9.5 42t15.5 38H200Zm0-120v40-560 243-3 280Zm80-40h163q3-21 9.5-41t14.5-39H280v80Zm0-160h244q32-30 71.5-50t84.5-27v-3H280v80Zm0-160h400v-80H280v80Zm200-190q13 0 21.5-8.5T510-820q0-13-8.5-21.5T480-850q-13 0-21.5 8.5T450-820q0 13 8.5 21.5T480-790ZM720-40q-83 0-141.5-58.5T520-240q0-83 58.5-141.5T720-440q83 0 141.5 58.5T920-240q0 83-58.5 141.5T720-40Zm-20-80h40v-100h100v-40H740v-100h-40v100H600v40h100v100Z" /></svg>
        Asignar ubicación</button>
    <a class="btn btn-light float-end" asp-area="" asp-route-id="@Model.doc_num" asp-controller="Recepciones" asp-action="Consultar">
        <svg xmlns="http://www.w3.org/2000/svg" height="24px" viewBox="0 -960 960 960" width="24px" fill="#5f6368"><path d="M280-200v-80h284q63 0 109.5-40T720-420q0-60-46.5-100T564-560H312l104 104-56 56-200-200 200-200 56 56-104 104h252q97 0 166.5 63T800-420q0 94-69.5 157T564-200H280Z" /></svg>

        Volver</a>
</p>
<table class="table table-striped p-4 overflow-scroll" style="background-color:lightgray;">
    <thead class="text-white" style="background-color:#746ab0;">
        <tr>
            <th>Código</th>
            <th>Cantidad</th>
            <th>Ubicación</th>    
    </tr>
        
    </thead>
    <tbody id="tablaUbicaciones">

    </tbody>
</table>
<div class="modal" id="ubicacionArticulo" style="background-color:#6153a9;">
    <div class="header text-center">
        <div class="title text-white text-center">
            <h3>
                <svg xmlns="http://www.w3.org/2000/svg" height="24px" viewBox="0 -960 960 960" width="24px" fill="#FFFFFF"><path d="M120-40v-880h80v80h560v-80h80v880h-80v-80H200v80h-80Zm80-480h80v-160h240v160h240v-240H200v240Zm0 320h240v-160h240v160h80v-240H200v240Zm160-320h80v-80h-80v80Zm160 320h80v-80h-80v80ZM360-520h80-80Zm160 320h80-80Z" /></svg>

                Ubicar artículo
            </h3>
        </div>
        <button class="btn close-modal">
            <svg xmlns="http://www.w3.org/2000/svg" height="24px" viewBox="0 -960 960 960" width="24px" fill="#FFFFFF"><path d="m336-280 144-144 144 144 56-56-144-144 144-144-56-56-144 144-144-144-56 56 144 144-144 144 56 56ZM480-80q-83 0-156-31.5T197-197q-54-54-85.5-127T80-480q0-83 31.5-156T197-763q54-54 127-85.5T480-880q83 0 156 31.5T763-763q54 54 85.5 127T880-480q0 83-31.5 156T763-197q-54 54-127 85.5T480-80Zm0-80q134 0 227-93t93-227q0-134-93-227t-227-93q-134 0-227 93t-93 227q0 134 93 227t227 93Zm0-320Z" /></svg>
        </button>
    </div>
    <div class="body text-white ">
        <form id="formularioUbicacion" onsubmit="return jQueryAjaxGrabarUbicacion(this)">
            <div><span id="errorFormulario"></span></div>
            <div style="flex-direction:row;width:90%;text-align:left;">
                <label style="width:25%;">Código: </label>
                <input type="text" id="codArt" name="codArt" style="width:25%;" value="@Model.co_art" />
                <input type="text" id="desArt" name="desArt" style="width:45%;" readonly value="@Model.articulo?.art_des" />
                </div>
            <div style="flex-direction:row;width:90%;margin-top:10px;text-align:left;">
                <label style="width:25%;">Ubicación:</label>
                <input type="text" id="codUbi" name="codUbi" style="width:25%;" readonly required />
                <input type="text" id="desUbi" name="desUbi" style="width:35%;" readonly/>
                <a class="btn btn-outline-success" data-target-modal="#listaDeUbicaciones" style="width:10%;text-align:left;">
                    <svg xmlns="http://www.w3.org/2000/svg" height="25px" viewBox="0 -960 960 960" width="25px" fill="#FFFFFF" style="margin-left:-8px;"><path d="M784-120 532-372q-30 24-69 38t-83 14q-109 0-184.5-75.5T120-580q0-109 75.5-184.5T380-840q109 0 184.5 75.5T640-580q0 44-14 83t-38 69l252 252-56 56ZM380-400q75 0 127.5-52.5T560-580q0-75-52.5-127.5T380-760q-75 0-127.5 52.5T200-580q0 75 52.5 127.5T380-400Z" /></svg>
                </a>
            </div>
            <div style="flex-direction:row;width:90%;margin-top:10px;text-align:left;">
                <label style="width:25%;">Cantidad:</label>
                <input type="number" id="cantUbi" name="cantUbi" style="width:25%;" required/>
               
            </div>
            <div style="flex-direction:row;width:90%;margin-top:10px;text-align:left;">
                <label style="width:25%;">Fecha:</label>
                <input type="date" id="fechaUbi" name="fechaUbi" style="width:45%;" required />

            </div>
            <input class="btn btn-light" type="submit" name="guardarUbicacion" style="margin-left:5px;margin-top:10px;" value="guardar">
        </form>
    </div>

</div>


<div class="modal" id="listaDeUbicaciones" style="background-color:#6153a9;">
    <div class="header text-center">
        <div class="title text-white text-center">
            <h3>
                <svg xmlns="http://www.w3.org/2000/svg" height="24px" viewBox="0 -960 960 960" width="24px" fill="#FFFFFF"><path d="M120-40v-880h80v80h560v-80h80v880h-80v-80H200v80h-80Zm80-480h80v-160h240v160h240v-240H200v240Zm0 320h240v-160h240v160h80v-240H200v240Zm160-320h80v-80h-80v80Zm160 320h80v-80h-80v80ZM360-520h80-80Zm160 320h80-80Z" /></svg>
                Ubicaciones
            </h3>
        </div>
        <button class="btn close-modal">
            <svg xmlns="http://www.w3.org/2000/svg" height="24px" viewBox="0 -960 960 960" width="24px" fill="#FFFFFF"><path d="m336-280 144-144 144 144 56-56-144-144 144-144-56-56-144 144-144-144-56 56 144 144-144 144 56 56ZM480-80q-83 0-156-31.5T197-197q-54-54-85.5-127T80-480q0-83 31.5-156T197-763q54-54 127-85.5T480-880q83 0 156 31.5T763-763q54 54 85.5 127T880-480q0 83-31.5 156T763-197q-54 54-127 85.5T480-80Zm0-80q134 0 227-93t93-227q0-134-93-227t-227-93q-134 0-227 93t-93 227q0 134 93 227t227 93Zm0-320Z" /></svg>
        </button>
    </div>
    <div class="body text-white ">
 
            <div style="flex-direction:row;width:90%;text-align:left;">
                <label style="width:25%;">Código: </label>
            <input type="text" id="txtUbicacionABuscar" name="txtUbicacionABuscar" style="width:55%;" />
            <table class="table table-striped p-4 overflow-scroll tabla-redonda">
                  <thead>
                      
                      <tr>
                          <th>Código</th>
                          <th>Descripción</th>
                          <th>Sel</th>
                      </tr>
                  </thead>
                  <tbody id="tablaListaUbicaciones">

                  </tbody>
              </table>
            </div>
        

    </div>

</div>
<div id="RowguidArticulo" style="visibility:hidden;">@Model.rowguid</div>
<div id="overlay"></div>
@section scripts{
    <script>
        const tablaUbicaciones=document.getElementById("tablaUbicaciones");
        const btnListaUbicaciones = document.getElementById("btnListaUbicaciones");
        let calculo = 0;
        const errorFormulario = document.getElementById("errorFormulario");
        let tamano = 0;
        async function RevisarUbicacion() {
            let total_renglon = 0;
            const rowguid_reng = document.getElementById("RowguidArticulo").textContent

            await fetch(`/UbicacionRenglones/${rowguid_reng}`)
                .then((response) => {
                    return response.ok ? response.json() : Promise.reject(response);
                })
                .then((data) => {

                    tablaUbicaciones.innerHTML = "";
                    
                    const datos = data.data;
                    console.log(datos)
                    tamano = datos.length;
                    datos.map(x => {
                      
                        let tr = document.createElement('tr');
                        let td1 = document.createElement('td');
                        let td2 = document.createElement('td');
                        let td3 = document.createElement('td');
                        

                     
                        td1.innerText = x.codigo;
                        td2.innerText = x.cantidad;
                        td3.innerText = x.ubicacion;

                       
                        tr.appendChild(td1);
                        tr.appendChild(td2);
                        tr.appendChild(td3);



                        tablaUbicaciones.append(tr);


                    })
                    total_renglon = datos.reduce((sum, element) => sum + element.cantidad, 0);
                    const cantidad_ubicada = document.getElementById("cantidad_ubicada");
                    const total_articulo = document.getElementById("total_articulo");
                    const falta_ubicar = document.getElementById("falta_ubicar");
                    let totalArticuloReng = total_articulo.textContent;
                    
                    cantidad_ubicada.innerHTML = total_renglon;
                    calculo = totalArticuloReng - total_renglon;
                    falta_ubicar.innerText = calculo;

                }).catch((error) => {
                    
                    console.log("error");
                    /*  const mostrar = datos.map(x => `<tr><td>${x.idcliente}</td><td>${x.descripcion}</td><td><button onClick='colocarIdCliente(${x.idcliente});'>${x.idcliente}</button></td></tr> `
                      )

                      clientesabuscar.innerHTML = mostrar.join('');*/
                })

        }


        const btns = document.querySelectorAll("[data-target-modal]");
        const close_modals = document.querySelectorAll(".close-modal");
        const overlay = document.getElementById("overlay");
        const cantUbi = document.getElementById("cantUbi");

        btns.forEach((btn) => {
            btn.addEventListener("click", (e) => {
                e.preventDefault();
                console.log(`fg ${btn.dataset.targetModal}`)
                document.querySelector(btn.dataset.targetModal).classList.add("active");
                overlay.classList.add("active");
            });
        });

        close_modals.forEach((btn) => {
            btn.addEventListener("click", () => {
                const modal = btn.closest(".modal");
                modal.classList.remove("active");
                overlay.classList.remove("active");
            });
        });

        window.onclick = (event) => {
            if (event.target == overlay) {
                const modals = document.querySelectorAll(".modal");
                modals.forEach((modal) => {
                    modal.classList.remove("active");
                    overlay.classList.remove("active");
                })
            }
        }

        const close_btns = document.querySelectorAll(".close");
        close_btns.forEach((btn) => {
            btn.addEventListener("click", () => {
                btn.parentElement.style.display = "none";
            });
        });



        const txtClienteABuscar = document.querySelector('#txtUbicacionABuscar');
        txtUbicacionABuscar.addEventListener('input', BListadoUbicaciones);
        const tablaListaUbicaciones = document.getElementById("tablaListaUbicaciones");
        async function BListadoUbicaciones() {


            let busqueda = txtUbicacionABuscar.value;

            if (!busqueda) {
                busqueda = "0";
            }
            await fetch(`/listadoUbicaciones/${busqueda}`)
                .then((response) => {
                    return response.ok ? response.json() : Promise.reject(response);
                })
                .then((data) => {
                    tablaListaUbicaciones.innerHTML = "";
                    const datos = data.data;
                    let svgString = `
               <svg xmlns="http://www.w3.org/2000/svg" height="24px" viewBox="0 -960 960 960" width="24px" fill="#FFFFFF"><path d="m424-296 282-282-56-56-226 226-114-114-56 56 170 170Zm56 216q-83 0-156-31.5T197-197q-54-54-85.5-127T80-480q0-83 31.5-156T197-763q54-54 127-85.5T480-880q83 0 156 31.5T763-763q54 54 85.5 127T880-480q0 83-31.5 156T763-197q-54 54-127 85.5T480-80Zm0-80q134 0 227-93t93-227q0-134-93-227t-227-93q-134 0-227 93t-93 227q0 134 93 227t227 93Zm0-320Z"/></svg>
        `;
                    datos.map(x => {

                        let tr = document.createElement('tr');
                        let td1 = document.createElement('td');
                        let td2 = document.createElement('td');
                        let td3 = document.createElement('td');
                        let btn = document.createElement('button');

                        let containerB = document.createElement('span');
                        containerB.innerHTML = svgString;

                        btn.append(containerB);

                        btn.value = x.idcliente;
                        btn.classList = `btn btn-success`;
                        btn.onclick = function () {

                            const IdCliente = document.querySelector("#codUbi");
                            const desCliente = document.querySelector("#desUbi");
                            IdCliente.value = td1.textContent;
                            desCliente.value = td2.textContent;
                            listaDeUbicaciones.classList.remove("active");
                            
                        };

                        td1.innerText = x.codigo;
                        td2.innerHTML = x.descripcion;

                        td3.appendChild(btn);
                        tr.appendChild(td1);
                        tr.appendChild(td2);
                        tr.appendChild(td3);
                        tablaListaUbicaciones.append(tr);



                    });
                    /*  const mostrar = datos.map(x => `<tr><td>${x.idcliente}</td><td>${x.descripcion}</td><td><button onClick='colocarIdCliente(${x.idcliente});'>${x.idcliente}</button></td></tr> `
                      )

                      clientesabuscar.innerHTML = mostrar.join('');*/
                })

        }

       /* document.addEventListener("DOMContentLoaded", function () {
            document.getElementById("formularioUbicacion").addEventListener('submit', validarFormulario);
        });

        function validarFormulario(evento) {
            evento.preventDefault();
           
            var co_ubi = document.getElementById('codUbi').value;
            
            if (co_ubi.length == 0) {
                errorFormulario.innerText = "Asigne una ubicación";
                errorFormulario.classList.add("error_form");
                setTimeout(() => {
                    errorFormulario.innerText = "";
                },3000);
                return;
            }
            if (cantUbi.value<=0) {
                errorFormulario.innerText = "La cantidad esta en 0";
                errorFormulario.classList.add("error_form");
                setTimeout(() => {
                    errorFormulario.innerText = "";
                }, 3000);
                return;
            }
       
            this.submit();
        }*/
        cantUbi.addEventListener('input', revisarCantidad);
        async function revisarCantidad(){
          
            if (cantUbi.value > calculo) {
                errorFormulario.innerHTML = "Revise la cantidad";
                errorFormulario.classList.add("error_form");
                let cadenaCorregida = cantUbi.value.substring(0, cantUbi.value.length - 1);
                cantUbi.value = cadenaCorregida;
                setTimeout(() => {
                    errorFormulario.innerText = "";
                }, 3000);
                return;
            }

      
            
            
        }

        jQueryAjaxGrabarUbicacion = form => {

            var co_ubi = document.getElementById('codUbi').value;

            if (co_ubi.length == 0) {
                errorFormulario.innerText = "Asigne una ubicación";
                errorFormulario.classList.add("error_form");
                setTimeout(() => {
                    errorFormulario.innerText = "";
                }, 3000);
                return false;
            }
            if (cantUbi.value <= 0) {
                errorFormulario.innerText = "La cantidad esta en 0";
                errorFormulario.classList.add("error_form");
                setTimeout(() => {
                    errorFormulario.innerText = "";
                }, 3000);
                return false;
            }

            if (Swal.fire({
                title: '¿Está usted seguro de realizar esta operación?',
                text: "¡No podra revertir esta operación!",
                icon: 'question',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Si, continuar!'
            }).then((result) => {
                if (result.isConfirmed) {
                    const cod_ubi = document.getElementById("codUbi");
                    const fecha_ubi = document.getElementById("fechaUbi");
                    const cant_ubi = document.getElementById("cantUbi");
                    let ubicacionV = cod_ubi.value;
                    let fechaUbiV = fecha_ubi.value;
                    let cantidadV = cant_ubi.value;
                    let row_v = @Html.Raw(Json.Serialize(Model.rowguid));
                    let reng_v = parseInt(tamano + 1);
                    let co_art_v = @Html.Raw(Json.Serialize(Model.co_art));
                    let co_alma_v = @Html.Raw(Json.Serialize(Model.co_alma));
                    let co_precio_v = @Html.Raw(Json.Serialize(Model.cost_unit));
             
                    var InsertRengUbiVM = {

                        gRowguid_Reng: row_v,
                        iReng_Num:reng_v,
                        sTipo_Doc: 'FACT',
                        sCo_Art: co_art_v,
                        sCo_Alma: co_alma_v,
                        sUbicacion: ubicacionV,
                        sdFecha_Inicio: fechaUbiV,
                        sdFecha_Expiracion: fechaUbiV,
                        deCantidad: cantidadV,
                        co_procedencia: '0',
                        dePrecio: co_precio_v,
                        sCo_Us_In: "01/01/2024",
                        sMaquina: "Profit",
                        sCo_Sucu_In: "Profit",
                        sRevisado: '0',
                        sTrasnfe: '0'
                    }

                    try {
                        $.ajax({
                            type: 'POST',
                            /* url: form.action,
                             data: new FormData(form),*/
                            url: "@Url.Action("InsertarRenglonUbicacion", "Recepciones")", // Url
                            data: InsertRengUbiVM,

                           
                           
                            success: function (res) {
                               /* $('#view-all').html(res.FormData);*/
                            },
                            error: function (err) {
                                console.log(err)
                            }
                        }).done(function (msg) {
                            if (msg.status === 'Borrado') {
                               /* $('#view-all').load(' #view-all')*/

                                Swal.fire(
                                    'Borrado!',
                                    'Ha sido borrado.',
                                    'success'
                                )
                            }
                            else if (msg.status === 'EnUso') {
                                Swal.fire(
                                    'Hecho!',
                                    'Se inserto el registro.',
                                    'success'
                                )
                                RevisarUbicacion();
                                ubicacionArticulo.classList.remove("active");
                                overlay.classList.remove("active");
                            

                               /* $('#view-all').load(' #view-all')*/
                            } else if (msg.status === 'EnUsoReng') {
                                Swal.fire(
                                    'Error!',
                                    'Elimine los detalles del caso y vuelva a intentar',
                                    'error'
                                )
                               /* $('#view-all').load(' #view-all')*/
                            }

                        });
                    } catch (ex) {
                        console.log(ex)
                    }





                }
            }))



                //prevent default form submit event
                return false;
        }


        RevisarUbicacion();
    </script>
}